name: build

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        python: ["2.7", "3.5", "3.6", "3.7", "3.8"]
        gtest_ver: ["1.8.0"]
        os: [ubuntu-latest]
        include:
          - python: "2.7"
            tox_env: "py27-pytestlatest"
          - python: "3.5"
            tox_env: "py35-pytestlatest"
          - python: "3.6"
            tox_env: "py36-pytestlatest"
          - python: "3.7"
            tox_env: "py37-pytestlatest"
          - python: "3.8"
            tox_env: "py38-pytestlatest py38-pytest53"

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}
    - name: Install GoogleTest
      run: |
        wget https://github.com/google/googletest/archive/release-${{ matrix.gtest_ver }}.tar.gz
        tar -zxvf release-${{ matrix.gtest_ver }}.tar.gz
        cd googletest-release-${{ matrix.gtest_ver }}/googletest
        cmake .
        sudo make install
    - name: Install Boost.Test
      run: |
        sudo apt-get install libboost-test-dev valgrind
    - name: Compile
      run: |
        python -m pip install --upgrade pip
        pip install scons
        scons -j4 -C tests
    - name: Install Tox
      run: |
        pip install tox
    - name: Test
      run: |
        tox -e ${{ matrix.tox_env }}

  linting:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: "3.7"
    - name: Install tox
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Linting
      run: |
        tox -e linting

  deploy:

    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

    runs-on: ubuntu-latest

    needs: [build, linting]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: "3.7"
    - name: Install wheel
      run: |
        python -m pip install --upgrade pip
        pip install wheel
    - name: Build package
      run: |
        python setup.py sdist bdist_wheel
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_token }}
