name: test

on:
  push:
    branches:
    - "master"
    - "test-me-*"

  pull_request:
    branches:
    - "master"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  compile:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        gtest_ver: [ "1.11.0" ]

    steps:
      - uses: actions/checkout@v4.2.2
      - name: Set up Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version: "3.8"
      - name: Install GoogleTest
        run: |
          wget https://github.com/google/googletest/archive/release-${{ matrix.gtest_ver }}.tar.gz
          tar -zxvf release-${{ matrix.gtest_ver }}.tar.gz
          cd googletest-release-${{ matrix.gtest_ver }}
          mkdir build
          cd build
          cmake ..
          sudo make install
      - name: Install Boost.Test
        run: |
          sudo apt-get update
          sudo apt-get install libboost-test-dev valgrind
      - name: Compile
        run: |
          python -m pip install --upgrade pip
          pip install scons
          scons -j4 -C tests
      - name: Upload compilation results
        uses: actions/upload-artifact@v4.6.1
        with:
          name: tests
          if-no-files-found: error
          retention-days: 1
          path: |
            tests/
            !tests/**/*.py
            !tests/**/*.cpp
            !tests/**/*.xml
            !tests/**/*.o

  package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - name: Build and Check Package
        uses: hynek/build-and-inspect-python-package@v2.12.0

  test:
    needs: [compile, package]
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4.2.2
    - name: Set up Python
      uses: actions/setup-python@v5.4.0
      with:
        python-version: ${{ matrix.python }}

    - name: Download compiled tests
      uses: actions/download-artifact@v4.1.9
      with:
        name: tests
        path: tests

    - name: Download Package
      uses: actions/download-artifact@v4.1.9
      with:
        name: Packages
        path: dist

    - name: Install Tox
      run: |
        chmod a+x -R tests
        pip install tox

    - name: Test
      shell: bash
      run: |
        tox run -e py --installpkg `find dist/*.tar.gz`
